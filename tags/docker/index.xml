<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Aeric Blog</title>
    <link>https://aeric.io/tags/docker/</link>
    <description>Recent content in Docker on Aeric Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jan 2019 21:09:35 +0800</lastBuildDate>
    
	<atom:link href="https://aeric.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>容器化部署 Consul 集群</title>
      <link>https://aeric.io/post/consul-cluster-installation-with-containers/</link>
      <pubDate>Sun, 27 Jan 2019 21:09:35 +0800</pubDate>
      
      <guid>https://aeric.io/post/consul-cluster-installation-with-containers/</guid>
      <description>Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。Consul 是分布式的、高可用的、 可横向扩展的。它具备以下特性: 服务发现: Consul 提</description>
    </item>
    
    <item>
      <title>Mesos集群二进制方式部署二 </title>
      <link>https://aeric.io/post/mesos-cluster-installation-b/</link>
      <pubDate>Sat, 12 Jan 2019 20:44:13 +0800</pubDate>
      
      <guid>https://aeric.io/post/mesos-cluster-installation-b/</guid>
      <description>本次部署基于 Zookeeper+Mesos+Marathon+Docker，具体部署环境如下： mesos-master1 172.16.8.120 mesos+zookeeper+marathon mesos-master2 172.16.8.121 mesos+zookeeper+marathon mesos-master3 172.16.8.122 mesos+zookeeper+marathon mesos-slave1 172.16.8.110 mesos+docker 上述所有机器系统版本如</description>
    </item>
    
    <item>
      <title>Mesos集群二进制方式部署一</title>
      <link>https://aeric.io/post/mesos-cluster-installation-a/</link>
      <pubDate>Sat, 12 Jan 2019 20:43:44 +0800</pubDate>
      
      <guid>https://aeric.io/post/mesos-cluster-installation-a/</guid>
      <description>私有化 PaaS 平台主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成，各组件用途及扮演的角色信息如下所示： Zookeeper: Zookeeper 是一个分布式的，</description>
    </item>
    
    <item>
      <title>记一次harbor的升级之旅</title>
      <link>https://aeric.io/post/harbor-upgrade-guide/</link>
      <pubDate>Thu, 10 Jan 2019 14:37:01 +0800</pubDate>
      
      <guid>https://aeric.io/post/harbor-upgrade-guide/</guid>
      <description>之前安装的 harbor版本是 v1.6的版本，由于在 v1.7版本中新增加了对 helm的支持，所以为了更充分的利用 harbor 镜像仓库，我们将进行一次升级</description>
    </item>
    
    <item>
      <title>Harbor 私有镜像仓库安装配置</title>
      <link>https://aeric.io/post/harbor-installation/</link>
      <pubDate>Thu, 10 Jan 2019 11:37:01 +0800</pubDate>
      
      <guid>https://aeric.io/post/harbor-installation/</guid>
      <description>在一个企业里，企业自有的私有仓库是必须的，配置私有 docker 镜像仓库 harbor，为的是将自己构建的镜像 push 到私有镜像仓库中，方便以后拉取。 Harbor 的官方站</description>
    </item>
    
    <item>
      <title>Kubernetes集群安装Metrics Server</title>
      <link>https://aeric.io/post/k8s-metrics-server-installation/</link>
      <pubDate>Fri, 04 Jan 2019 12:23:36 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-metrics-server-installation/</guid>
      <description>Kubernetes 1.8 关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server。 Metrics Server 的安装 首先</description>
    </item>
    
    <item>
      <title>容器化部署 Mesos 集群</title>
      <link>https://aeric.io/post/mesos-container-cluster-installation/</link>
      <pubDate>Thu, 06 Dec 2018 16:34:08 +0800</pubDate>
      
      <guid>https://aeric.io/post/mesos-container-cluster-installation/</guid>
      <description>整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成，各组件用途及扮演的角色信息如下所示： Zookeeper: Zookeeper 是一个分布式的，开</description>
    </item>
    
    <item>
      <title>Kubernetes集群部署DNS插件</title>
      <link>https://aeric.io/post/k8s-dns-addons-installation/</link>
      <pubDate>Sat, 01 Dec 2018 14:35:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-dns-addons-installation/</guid>
      <description>kube-dns 官方的 yaml 文件其实在我们先前下载的 kubernetes server 软件包内，具体路径为：/srv/kubernetes/cluster/addons/dns 我是把 kuberntes 解压</description>
    </item>
    
    <item>
      <title>Kubernetes集群部署Node节点服务</title>
      <link>https://aeric.io/post/k8s-nodes-installation/</link>
      <pubDate>Fri, 30 Nov 2018 18:35:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-nodes-installation/</guid>
      <description>kubernetes node 节点包含如下组件： Flanneld Docker:docker直接用yum安装即可 kubelet kube-proxy 注意：每台 node 上都需要安装 flannel，master 节点上可以不必</description>
    </item>
    
    <item>
      <title>Kubernetes集群配置Flannel服务</title>
      <link>https://aeric.io/post/k8s-flannel-and-docker-config/</link>
      <pubDate>Fri, 30 Nov 2018 16:35:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-flannel-and-docker-config/</guid>
      <description>检查 TLS 证书 [root@ceph-node1 ~]# ls /etc/kubernetes/ssl/ admin-key.pem admin.pem ca-key.pem ca.pem kube-proxy-key.pem kube-proxy.pem kubernetes-key.pem kubernetes.pem 配置 Flannel 服务 建议直接使用 yum 安装 flanneld，除非对版本有特殊需求，默认安装的是 v0.7.1 版本的 flannel。 安</description>
    </item>
    
    <item>
      <title>Kubernetes集群部署Master节点服务</title>
      <link>https://aeric.io/post/k8s-master-installation/</link>
      <pubDate>Fri, 30 Nov 2018 15:35:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-master-installation/</guid>
      <description>kubernetes master 节点包含的组件包括以下几个部分： 1、 kube-apiserver 2、 kube-scheduler 3、 kube-controller-manager 本次部署我们将三个组件安装在一台机器上，kube-scheduler、kube-con</description>
    </item>
    
    <item>
      <title>Kubernetes集群创建高可用etcd集群</title>
      <link>https://aeric.io/post/k8s-etcd-cluster-installation/</link>
      <pubDate>Fri, 30 Nov 2018 14:35:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-etcd-cluster-installation/</guid>
      <description>kuberntes 集群使用 etcd 存储所有数据,本部分我们介绍部署一个三节点的高可用 etcd 集群，这三个节点复用kubernetes master机器。 三个 etcd 节点如下所示</description>
    </item>
    
    <item>
      <title>Kubernetes集群安装kubectl工具</title>
      <link>https://aeric.io/post/k8s-kubectl-installation/</link>
      <pubDate>Fri, 30 Nov 2018 14:25:24 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-kubectl-installation/</guid>
      <description>其实 kubernetes 的 server 软件包基本涵盖了 kubernetes 几乎所有的工具，所以我们只需要下载 kubernetes 的 server 软件包即可。 kubernetes 源码下载地址： https://github.com/kubernetes/kubernetes/releases/ 本文档是基于 v1.9.6 版本部署 kubernetes 集群，其他版本基本</description>
    </item>
    
    <item>
      <title>Kubernetes集群创建配置文件</title>
      <link>https://aeric.io/post/k8s-create-kubeconfig/</link>
      <pubDate>Fri, 30 Nov 2018 14:25:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-create-kubeconfig/</guid>
      <description>需要说明的是 kubelet、kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权； kubernetes v1.4 版本开始支持由 kube-apiserver 为客户端生成 TLS 证书</description>
    </item>
    
    <item>
      <title>Kubernetes 集群创建 TLS 证书及密钥</title>
      <link>https://aeric.io/post/k8s-create-tls-and-keys/</link>
      <pubDate>Fri, 30 Nov 2018 14:05:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-create-tls-and-keys/</guid>
      <description>集群环境如下： k8s-master: 192.168.8.66 k8s-nodes: 192.168.8.67 192.168.8.68 k8s-harbor: 192.168.8.69 创建TLS证书及密钥 kubernetes系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成</description>
    </item>
    
    <item>
      <title>Docker 服务的一些常用配置</title>
      <link>https://aeric.io/post/docker-other-config/</link>
      <pubDate>Sun, 29 Jul 2018 21:36:09 +0800</pubDate>
      
      <guid>https://aeric.io/post/docker-other-config/</guid>
      <description>同步容器与宿主机时间 在 Docker 容器创建好之后，可能会发现容器时间跟宿主机时间不一致，这就需要同步它们的时间，让容器时间跟宿主机时间保持一致。 宿主机</description>
    </item>
    
    <item>
      <title>Docker 配置镜像加速器</title>
      <link>https://aeric.io/post/docker-image-accelerator-installation/</link>
      <pubDate>Sat, 28 Jul 2018 21:35:35 +0800</pubDate>
      
      <guid>https://aeric.io/post/docker-image-accelerator-installation/</guid>
      <description>Docker 默认是从 Docker Hub 上拉取所需镜像的，但是一般在国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。为此 Docker 官方和国内很多云服务商都提供了国内</description>
    </item>
    
    <item>
      <title>CentOS 7 安装 Docker</title>
      <link>https://aeric.io/post/docker-installation-guide/</link>
      <pubDate>Fri, 27 Jul 2018 21:35:11 +0800</pubDate>
      
      <guid>https://aeric.io/post/docker-installation-guide/</guid>
      <description>本次安装的 docker 客户端是 CE 版本，具体安装教程可以参考官方文档： Docker Installation 卸载旧版本 Docker 如果要重新安装 Docker ，首先需要在安装之前卸载之前安装过的 Docker 版本，具体卸</description>
    </item>
    
    <item>
      <title>容器 Docker 入门介绍</title>
      <link>https://aeric.io/post/docker-introduction/</link>
      <pubDate>Thu, 26 Jul 2018 21:34:07 +0800</pubDate>
      
      <guid>https://aeric.io/post/docker-introduction/</guid>
      <description>Docker 最初是由 dotCloud 公司创始人 Solomon Hykes 发起的一个公司的内部项目，并于 2013 年实现开源，主要项目代码在 GitHub 上维护。 Docker 使用谷歌公司自己开发的 GO 语言 实现的，基于 Linux 内</description>
    </item>
    
  </channel>
</rss>