[{"author":null,"categories":["TECH"],"content":"对于 Verddacio，官方的定义是这样的: Verdaccio is a lightweight private npm proxy registry built in Node.js 。意思就是 Verdaccio 是一个 Node.js 创建的轻量的私有 Npm Proxy Registry","date":1590840773,"description":"对于 Verddacio，官方的定义是这样的: Verdaccio is a lightweight private npm proxy registry built in Node.js 。意思就是 Verdaccio 是一个 Node.js 创建的轻量的私有 Npm Proxy Registry","dir":"post\\","excerpt_html":"对于 Verddacio，官方的定义是这样的: Verdaccio is a lightweight private npm proxy registry built in Node.js 。意思就是 Verdaccio 是一个 Node.js 创建的轻量的私有 Npm Proxy Registry","excerpt_text":"对于 Verddacio，官方的定义是这样的: Verdaccio is a lightweight private npm proxy registry built in Node.js 。意思就是 Verdaccio 是一个 Node.js 创建的轻量的私有 Npm Proxy Registry","expirydate":-62135596800,"fuzzywordcount":1600,"html":"对于 Verddacio，官方的定义是这样的: Verdaccio is a lightweight private npm proxy registry built in Node.js 。意思就是 Verdaccio 是一个 Node.js 创建的轻量的私有 Npm Proxy Registry","keywords":[],"kind":"page","lang":"en","lastmod":1590840773,"objectID":"8943037fb2992dbb56a9c7d7841a1de0","permalink":"https://aeric.io/post/verddacio-kubernetes/","publishdate":"2020-05-30T20:12:53+08:00","readingtime":4,"relpermalink":"/post/verddacio-kubernetes/","section":"post","summary":"对于 Verddacio，官方的定义是这样的: Verdaccio is a lightweight private npm proxy registry built in Node.js 。意思就是 Verdaccio 是一个 Node.js 创建的轻量的私有 Npm Proxy Registry。它具有以下特性:","tags":["Verddacio","Kubernetes","Npm"],"title":"Kubernetes 安装 Verddacio ","type":"post","url":"/post/verddacio-kubernetes/","weight":0,"wordcount":1556},{"author":null,"categories":["TOOLS"],"content":"我们都知道 jq 工具一般是处理 json 格式的文本，使其可以高亮显示以便提高阅读性，今天偶然发现另一个好玩的工具，这个工具就是 yh ，该工具可以对 yaml 格式的文本进行高亮显示","date":1589587200,"description":"我们都知道 jq 工具一般是处理 json 格式的文本，使其可以高亮显示以便提高阅读性，今天偶然发现另一个好玩的工具，这个工具就是 yh ，该工具可以对 yaml 格式的文本进行高亮显示","dir":"post\\","excerpt_html":"我们都知道 jq 工具一般是处理 json 格式的文本，使其可以高亮显示以便提高阅读性，今天偶然发现另一个好玩的工具，这个工具就是 yh ，该工具可以对 yaml 格式的文本进行高亮显示","excerpt_text":"我们都知道 jq 工具一般是处理 json 格式的文本，使其可以高亮显示以便提高阅读性，今天偶然发现另一个好玩的工具，这个工具就是 yh ，该工具可以对 yaml 格式的文本进行高亮显示","expirydate":-62135596800,"fuzzywordcount":300,"html":"我们都知道 jq 工具一般是处理 json 格式的文本，使其可以高亮显示以便提高阅读性，今天偶然发现另一个好玩的工具，这个工具就是 yh ，该工具可以对 yaml 格式的文本进行高亮显示","keywords":[],"kind":"page","lang":"en","lastmod":1589587200,"objectID":"77d840837de37a2343f0079cd9ee4371","permalink":"https://aeric.io/post/yh/","publishdate":"2020-05-16T00:00:00Z","readingtime":1,"relpermalink":"/post/yh/","section":"post","summary":"我们都知道 jq 工具一般是处理 json 格式的文本，使其可以高亮显示以便提高阅读性，今天偶然发现另一个好玩的工具，这个工具就是 yh ，该工具可以对 yaml 格式的文","tags":["Yaml","Kubernetes"],"title":"Yaml 文件高亮工具","type":"post","url":"/post/yh/","weight":0,"wordcount":252},{"author":null,"categories":["TECH"],"content":"对于 RabbitMQ 集群，虽然官方提供了 RabbitMQ 管理 UI 来监控集群状态，但是从设计上来说这种方式并不是特别方便，这里我是借助 Prometheus 并配合 Grafana 来整体监控 RabbitMQ 集群","date":1575951988,"description":"对于 RabbitMQ 集群，虽然官方提供了 RabbitMQ 管理 UI 来监控集群状态，但是从设计上来说这种方式并不是特别方便，这里我是借助 Prometheus 并配合 Grafana 来整体监控 RabbitMQ 集群","dir":"post\\","excerpt_html":"对于 RabbitMQ 集群，虽然官方提供了 RabbitMQ 管理 UI 来监控集群状态，但是从设计上来说这种方式并不是特别方便，这里我是借助 Prometheus 并配合 Grafana 来整体监控 RabbitMQ 集群","excerpt_text":"对于 RabbitMQ 集群，虽然官方提供了 RabbitMQ 管理 UI 来监控集群状态，但是从设计上来说这种方式并不是特别方便，这里我是借助 Prometheus 并配合 Grafana 来整体监控 RabbitMQ 集群","expirydate":-62135596800,"fuzzywordcount":1200,"html":"对于 RabbitMQ 集群，虽然官方提供了 RabbitMQ 管理 UI 来监控集群状态，但是从设计上来说这种方式并不是特别方便，这里我是借助 Prometheus 并配合 Grafana 来整体监控 RabbitMQ 集群","keywords":[],"kind":"page","lang":"en","lastmod":1575951988,"objectID":"82d9584afbd111e4ca26c253fa359e0d","permalink":"https://aeric.io/post/rabbitmq-prometheus-monitoring/","publishdate":"2019-12-10T12:26:28+08:00","readingtime":3,"relpermalink":"/post/rabbitmq-prometheus-monitoring/","section":"post","summary":"对于 RabbitMQ 集群，虽然官方提供了 RabbitMQ 管理 UI 来监控集群状态，但是从设计上来说这种方式并不是特别方便，这里我是借助 Prometheus 并配合 Grafana 来整体监控 RabbitMQ 集群。 对于 Rab","tags":["Prometheus","RabbitMQ"],"title":"Prometheus 监控 RabbitMQ 集群","type":"post","url":"/post/rabbitmq-prometheus-monitoring/","weight":0,"wordcount":1138},{"author":null,"categories":["TECH"],"content":"以前简单介绍了一下 Traefik 2.0 的新特性，这里我试着在已经存在的 Kubernetes 集群中部署 Traefik 2.0 ,需要注意的是新版本的 Traefik 在配置 Ingress 的路由规则的时候是通过自定义的 CRD 对象来实现的","date":1570270373,"description":"以前简单介绍了一下 Traefik 2.0 的新特性，这里我试着在已经存在的 Kubernetes 集群中部署 Traefik 2.0 ,需要注意的是新版本的 Traefik 在配置 Ingress 的路由规则的时候是通过自定义的 CRD 对象来实现的","dir":"post\\","excerpt_html":"以前简单介绍了一下 Traefik 2.0 的新特性，这里我试着在已经存在的 Kubernetes 集群中部署 Traefik 2.0 ,需要注意的是新版本的 Traefik 在配置 Ingress 的路由规则的时候是通过自定义的 CRD 对象来实现的","excerpt_text":"以前简单介绍了一下 Traefik 2.0 的新特性，这里我试着在已经存在的 Kubernetes 集群中部署 Traefik 2.0 ,需要注意的是新版本的 Traefik 在配置 Ingress 的路由规则的时候是通过自定义的 CRD 对象来实现的","expirydate":-62135596800,"fuzzywordcount":1400,"html":"以前简单介绍了一下 Traefik 2.0 的新特性，这里我试着在已经存在的 Kubernetes 集群中部署 Traefik 2.0 ,需要注意的是新版本的 Traefik 在配置 Ingress 的路由规则的时候是通过自定义的 CRD 对象来实现的","keywords":[],"kind":"page","lang":"en","lastmod":1570270373,"objectID":"d6c5311b9b2d58a14f4f5943dccc9bad","permalink":"https://aeric.io/post/traefik2.0-install-and-config/","publishdate":"2019-10-05T18:12:53+08:00","readingtime":3,"relpermalink":"/post/traefik2.0-install-and-config/","section":"post","summary":"以前简单介绍了一下 Traefik 2.0 的新特性，这里我试着在已经存在的 Kubernetes 集群中部署 Traefik 2.0 ,需要注意的是新版本的 Traefik 在配置 Ingress 的路由规则的时候是通过自定义的 CRD 对象来","tags":["Traefik","Kubernetes","Ingress"],"title":"Kubernetes 集群部署 Traefik 2.0","type":"post","url":"/post/traefik2.0-install-and-config/","weight":0,"wordcount":1397},{"author":null,"categories":["TECH"],"content":"Traefik 是一个开源的反向代理和负载均衡工具，现在官方介绍中将其定位为云原生的边缘路由器，且用了一堆修饰词：简单、自动、高速、全面、开源、产品级、内置监控指标和主流集群技术集成等等。","date":1570075294,"description":"Traefik 是一个开源的反向代理和负载均衡工具，现在官方介绍中将其定位为云原生的边缘路由器，且用了一堆修饰词：简单、自动、高速、全面、开源、产品级、内置监控指标和主流集群技术集成等等。","dir":"post\\","excerpt_html":"Traefik 是一个开源的反向代理和负载均衡工具，现在官方介绍中将其定位为云原生的边缘路由器，且用了一堆修饰词：简单、自动、高速、全面、开源、产品级、内置监控指标和主流集群技术集成等等。","excerpt_text":"Traefik 是一个开源的反向代理和负载均衡工具，现在官方介绍中将其定位为云原生的边缘路由器，且用了一堆修饰词：简单、自动、高速、全面、开源、产品级、内置监控指标和主流集群技术集成等等。","expirydate":-62135596800,"fuzzywordcount":1600,"html":"Traefik 是一个开源的反向代理和负载均衡工具，现在官方介绍中将其定位为云原生的边缘路由器，且用了一堆修饰词：简单、自动、高速、全面、开源、产品级、内置监控指标和主流集群技术集成等等。","keywords":[],"kind":"page","lang":"en","lastmod":1570075294,"objectID":"8558972c1f070d5a8058ee6928e8bb08","permalink":"https://aeric.io/post/traefik2.0-acquaintance/","publishdate":"2019-10-03T12:01:34+08:00","readingtime":4,"relpermalink":"/post/traefik2.0-acquaintance/","section":"post","summary":"Traefik 是一个开源的反向代理和负载均衡工具，现在官方介绍中将其定位为云原生的边缘路由器，且用了一堆修饰词：简单、自动、高速、全面、开源、产品级、内","tags":["Traefik","Kubernetes","Ingress"],"title":"云原生边缘路由器 Traefik 2.0","type":"post","url":"/post/traefik2.0-acquaintance/","weight":0,"wordcount":1516},{"author":null,"categories":["TECH"],"content":"Kubernetes Dashboard 是 Kubernetes 集群基于 web 的 UI，通过 Dashboard 可以管理集群大部分的配置，而且也可以发布相关服务，近期官方推出了全新的 Dashboard 2.0，增加了一些新功能","date":1569471956,"description":"Kubernetes Dashboard 是 Kubernetes 集群基于 web 的 UI，通过 Dashboard 可以管理集群大部分的配置，而且也可以发布相关服务，近期官方推出了全新的 Dashboard 2.0，增加了一些新功能","dir":"post\\","excerpt_html":"Kubernetes Dashboard 是 Kubernetes 集群基于 web 的 UI，通过 Dashboard 可以管理集群大部分的配置，而且也可以发布相关服务，近期官方推出了全新的 Dashboard 2.0，增加了一些新功能","excerpt_text":"Kubernetes Dashboard 是 Kubernetes 集群基于 web 的 UI，通过 Dashboard 可以管理集群大部分的配置，而且也可以发布相关服务，近期官方推出了全新的 Dashboard 2.0，增加了一些新功能","expirydate":-62135596800,"fuzzywordcount":1400,"html":"Kubernetes Dashboard 是 Kubernetes 集群基于 web 的 UI，通过 Dashboard 可以管理集群大部分的配置，而且也可以发布相关服务，近期官方推出了全新的 Dashboard 2.0，增加了一些新功能","keywords":[],"kind":"page","lang":"en","lastmod":1569471956,"objectID":"b2c709acb3bc6f7f34863804621ce0bd","permalink":"https://aeric.io/post/kubernetes-dashboard-2.0/","publishdate":"2019-09-26T12:25:56+08:00","readingtime":3,"relpermalink":"/post/kubernetes-dashboard-2.0/","section":"post","summary":"新版兼容性问题 因为 Kubernetes 本身更新速度比较快，Kubernetes API 在版本之间差异也是比较大的，这就导致了某些功能在新版的 Dashboard 中不能正常展示，具体兼","tags":["Kubernetes"],"title":"Kubernetes Dashboard 2.0 尝鲜","type":"post","url":"/post/kubernetes-dashboard-2.0/","weight":0,"wordcount":1390},{"author":null,"categories":["TECH"],"content":"之前一直没有时间总结和梳理 kubernetes 的亲和性调度相关内容，这次利用空闲时间将 kubernetes 的亲和性调度梳理一下，并借助官方文档的例子进行实际演示，","date":1558617839,"description":"之前一直没有时间总结和梳理 kubernetes 的亲和性调度相关内容，这次利用空闲时间将 kubernetes 的亲和性调度梳理一下，并借助官方文档的例子进行实际演示，","dir":"post\\","excerpt_html":"之前一直没有时间总结和梳理 kubernetes 的亲和性调度相关内容，这次利用空闲时间将 kubernetes 的亲和性调度梳理一下，并借助官方文档的例子进行实际演示，","excerpt_text":"之前一直没有时间总结和梳理 kubernetes 的亲和性调度相关内容，这次利用空闲时间将 kubernetes 的亲和性调度梳理一下，并借助官方文档的例子进行实际演示，","expirydate":-62135596800,"fuzzywordcount":3400,"html":"之前一直没有时间总结和梳理 kubernetes 的亲和性调度相关内容，这次利用空闲时间将 kubernetes 的亲和性调度梳理一下，并借助官方文档的例子进行实际演示，","keywords":[],"kind":"page","lang":"en","lastmod":1558617839,"objectID":"658f030f444254f8feed7a919aa0cf7d","permalink":"https://aeric.io/post/kubernetes-affinity/","publishdate":"2019-05-23T21:23:59+08:00","readingtime":7,"relpermalink":"/post/kubernetes-affinity/","section":"post","summary":"我们在使用 Kubernetes 集群调度应用 POD 的时候，一般情况下我们都是用集群的自动调度机制选择某个节点，默认情况 Kubernetes 集群一般分为预选和优选两种调度策略，计算得分","tags":["Kubernetes"],"title":"探究 Kubernetes 的亲和性调度","type":"post","url":"/post/kubernetes-affinity/","weight":0,"wordcount":3306},{"author":null,"categories":["TECH"],"content":"Nginx Ingress 默认并没有启用 https，如果我们需要实现 Ingress 的 https 方式访问，还需要我们配置 annotation 或者 configmap，这里主要说明一下 Ingress 如何通过 annotation 配置 https","date":1557135343,"description":"Nginx Ingress 默认并没有启用 https，如果我们需要实现 Ingress 的 https 方式访问，还需要我们配置 annotation 或者 configmap，这里主要说明一下 Ingress 如何通过 annotation 配置 https","dir":"post\\","excerpt_html":"Nginx Ingress 默认并没有启用 https，如果我们需要实现 Ingress 的 https 方式访问，还需要我们配置 annotation 或者 configmap，这里主要说明一下 Ingress 如何通过 annotation 配置 https","excerpt_text":"Nginx Ingress 默认并没有启用 https，如果我们需要实现 Ingress 的 https 方式访问，还需要我们配置 annotation 或者 configmap，这里主要说明一下 Ingress 如何通过 annotation 配置 https","expirydate":-62135596800,"fuzzywordcount":1300,"html":"Nginx Ingress 默认并没有启用 https，如果我们需要实现 Ingress 的 https 方式访问，还需要我们配置 annotation 或者 configmap，这里主要说明一下 Ingress 如何通过 annotation 配置 https","keywords":[],"kind":"page","lang":"en","lastmod":1557135343,"objectID":"41be8e01241680eed9a9dfa45f3ef308","permalink":"https://aeric.io/post/nginx-ingress-https-redirect/","publishdate":"2019-05-06T17:35:43+08:00","readingtime":3,"relpermalink":"/post/nginx-ingress-https-redirect/","section":"post","summary":"对于 Nginx Ingress 的 TLS 配置，官方文档已经写得很清楚了，只是有的地方只是点了一下，并没有做出详细的说明，可以说还是有点坑的，哈哈。这里我实际从头开始操作","tags":["Kubernetes","Ingress"],"title":"Nginx Ingress 配置 HTTPS","type":"post","url":"/post/nginx-ingress-https-redirect/","weight":0,"wordcount":1220},{"author":null,"categories":["TECH"],"content":"2019年3月26日 Kubernetes1.14 版本正式发布，这是2019年发布的第一个版本，距离上个版本发布刚好又是三个月的时间。今天把该版本的主要特性说明一下","date":1553654994,"description":"2019年3月26日 Kubernetes1.14 版本正式发布，这是2019年发布的第一个版本，距离上个版本发布刚好又是三个月的时间。今天把该版本的主要特性说明一下","dir":"post\\","excerpt_html":"2019年3月26日 Kubernetes1.14 版本正式发布，这是2019年发布的第一个版本，距离上个版本发布刚好又是三个月的时间。今天把该版本的主要特性说明一下","excerpt_text":"2019年3月26日 Kubernetes1.14 版本正式发布，这是2019年发布的第一个版本，距离上个版本发布刚好又是三个月的时间。今天把该版本的主要特性说明一下","expirydate":-62135596800,"fuzzywordcount":1900,"html":"2019年3月26日 Kubernetes1.14 版本正式发布，这是2019年发布的第一个版本，距离上个版本发布刚好又是三个月的时间。今天把该版本的主要特性说明一下","keywords":[],"kind":"page","lang":"en","lastmod":1553654994,"objectID":"aff8ccef7515bd36cfb858f7cdd5a269","permalink":"https://aeric.io/post/kubernetes-1-14-release-changelog/","publishdate":"2019-03-27T10:49:54+08:00","readingtime":4,"relpermalink":"/post/kubernetes-1-14-release-changelog/","section":"post","summary":"总的来说，本次发布的版本主要有以下几大显著特性： 对于管理 Windows node 的生产级支持； Kubectl 的说明文档经过完全重写，并启用新域名:https://kubec","tags":["Kubernetes","Release"],"title":"Kubernetes 1.14 更新日志","type":"post","url":"/post/kubernetes-1-14-release-changelog/","weight":0,"wordcount":1831},{"author":null,"categories":["TECH"],"content":"Alertmanager 作为一个独立的组件，负责接收并处理来自 Prometheus Server 的告警信息,本次我们主要介绍如何安装 Alertmanager 并且测试 Email、wechat 和 slack 等告警方式","date":1551434819,"description":"Alertmanager 作为一个独立的组件，负责接收并处理来自 Prometheus Server 的告警信息,本次我们主要介绍如何安装 Alertmanager 并且测试 Email、wechat 和 slack 等告警方式","dir":"post\\","excerpt_html":"Alertmanager 作为一个独立的组件，负责接收并处理来自 Prometheus Server 的告警信息,本次我们主要介绍如何安装 Alertmanager 并且测试 Email、wechat 和 slack 等告警方式","excerpt_text":"Alertmanager 作为一个独立的组件，负责接收并处理来自 Prometheus Server 的告警信息,本次我们主要介绍如何安装 Alertmanager 并且测试 Email、wechat 和 slack 等告警方式","expirydate":-62135596800,"fuzzywordcount":2100,"html":"Alertmanager 作为一个独立的组件，负责接收并处理来自 Prometheus Server 的告警信息,本次我们主要介绍如何安装 Alertmanager 并且测试 Email、wechat 和 slack 等告警方式","keywords":[],"kind":"page","lang":"en","lastmod":1551434819,"objectID":"234b9a2bfcac406685529094aaa5eb87","permalink":"https://aeric.io/post/prometheus-alertmanager-config/","publishdate":"2019-03-01T18:06:59+08:00","readingtime":5,"relpermalink":"/post/prometheus-alertmanager-config/","section":"post","summary":"在 Prometheus Server 中支持基于 PromQL 创建告警规则，如果满足 PromQL 定义的规则，则会产生一条告警，而告警的后续处理流程则由 AlertManager 进行管理。在 AlertManager 中我们可以与邮件，Slack","tags":["Prometheus"],"title":"Prometheus Alertmanager 基本配置","type":"post","url":"/post/prometheus-alertmanager-config/","weight":0,"wordcount":2005},{"author":null,"categories":["TECH"],"content":"之前简单介绍了 Prometheus 的工作模式和工作原理，本次主要是通过部署 Prometheus Server 和 node_exporter 并集成 grafana 可视化来更进一步了解 Prometheus 是怎样获取节点监控指标","date":1551406334,"description":"之前简单介绍了 Prometheus 的工作模式和工作原理，本次主要是通过部署 Prometheus Server 和 node_exporter 并集成 grafana 可视化来更进一步了解 Prometheus 是怎样获取节点监控指标","dir":"post\\","excerpt_html":"之前简单介绍了 Prometheus 的工作模式和工作原理，本次主要是通过部署 Prometheus Server 和 node_exporter 并集成 grafana 可视化来更进一步了解 Prometheus 是怎样获取节点监控指标","excerpt_text":"之前简单介绍了 Prometheus 的工作模式和工作原理，本次主要是通过部署 Prometheus Server 和 node_exporter 并集成 grafana 可视化来更进一步了解 Prometheus 是怎样获取节点监控指标","expirydate":-62135596800,"fuzzywordcount":1500,"html":"之前简单介绍了 Prometheus 的工作模式和工作原理，本次主要是通过部署 Prometheus Server 和 node_exporter 并集成 grafana 可视化来更进一步了解 Prometheus 是怎样获取节点监控指标","keywords":[],"kind":"page","lang":"en","lastmod":1551406334,"objectID":"26ffffd5956fb028d55c9f66a6df1ef5","permalink":"https://aeric.io/post/prometheus-addons-installation/","publishdate":"2019-03-01T10:12:14+08:00","readingtime":3,"relpermalink":"/post/prometheus-addons-installation/","section":"post","summary":"Prometheus 是一个开放性的监控解决方案，用户可以非常方便的安装和使用 Prometheus 并且能够非常方便的对其进行扩展。为了能够更加直观的了解 Prometheus Server，接下来我们","tags":["Prometheus"],"title":"Prometheus 安装和基本配置","type":"post","url":"/post/prometheus-addons-installation/","weight":0,"wordcount":1483},{"author":null,"categories":["TECH"],"content":"Prometheus 是一个开放性的监控解决方案，用户可以非常方便的安装和使用 Prometheus 并且能够非常方便的对其进行扩展，本文档先简单介绍一下 Prometheus","date":1551265147,"description":"Prometheus 是一个开放性的监控解决方案，用户可以非常方便的安装和使用 Prometheus 并且能够非常方便的对其进行扩展，本文档先简单介绍一下 Prometheus","dir":"post\\","excerpt_html":"Prometheus 是一个开放性的监控解决方案，用户可以非常方便的安装和使用 Prometheus 并且能够非常方便的对其进行扩展，本文档先简单介绍一下 Prometheus","excerpt_text":"Prometheus 是一个开放性的监控解决方案，用户可以非常方便的安装和使用 Prometheus 并且能够非常方便的对其进行扩展，本文档先简单介绍一下 Prometheus","expirydate":-62135596800,"fuzzywordcount":2300,"html":"Prometheus 是一个开放性的监控解决方案，用户可以非常方便的安装和使用 Prometheus 并且能够非常方便的对其进行扩展，本文档先简单介绍一下 Prometheus","keywords":[],"kind":"page","lang":"en","lastmod":1551265147,"objectID":"6f7396e61be266c8b2a769e5e9db0ec6","permalink":"https://aeric.io/post/prometheus-introduction/","publishdate":"2019-02-27T18:59:07+08:00","readingtime":5,"relpermalink":"/post/prometheus-introduction/","section":"post","summary":"Prometheus 系统简介 首先，Prometheus 受启发于 Google 的 Brogmon 监控系统，相似的 Kubernetes 是从 Google 的 Brog 系统演变而来，从 2012 年开始由前 Google 工程师在 Soundcloud 以开源软件的形式进行研","tags":["Prometheus"],"title":"Prometheus 监控入门介绍","type":"post","url":"/post/prometheus-introduction/","weight":0,"wordcount":2211},{"author":null,"categories":["TECH"],"content":"Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。Consul 是分布式的、高可用的、 可横向扩展的。一般 Consul 具有服务发现、健康检查、键值存储以及多数据中心等特性。","date":1548594575,"description":"Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。Consul 是分布式的、高可用的、 可横向扩展的。一般 Consul 具有服务发现、健康检查、键值存储以及多数据中心等特性。","dir":"post\\","excerpt_html":"Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。Consul 是分布式的、高可用的、 可横向扩展的。一般 Consul 具有服务发现、健康检查、键值存储以及多数据中心等特性。","excerpt_text":"Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。Consul 是分布式的、高可用的、 可横向扩展的。一般 Consul 具有服务发现、健康检查、键值存储以及多数据中心等特性。","expirydate":-62135596800,"fuzzywordcount":1800,"html":"Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。Consul 是分布式的、高可用的、 可横向扩展的。一般 Consul 具有服务发现、健康检查、键值存储以及多数据中心等特性。","keywords":[],"kind":"page","lang":"en","lastmod":1548594575,"objectID":"fdca294b6268563a65a7dcb9cb8ab285","permalink":"https://aeric.io/post/consul-cluster-installation-with-containers/","publishdate":"2019-01-27T21:09:35+08:00","readingtime":4,"relpermalink":"/post/consul-cluster-installation-with-containers/","section":"post","summary":"Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。Consul 是分布式的、高可用的、 可横向扩展的。它具备以下特性: 服务发现: Consul 提","tags":["Docker","Consul"],"title":"容器化部署 Consul 集群","type":"post","url":"/post/consul-cluster-installation-with-containers/","weight":0,"wordcount":1776},{"author":null,"categories":["TECH"],"content":"在 v1.6 版本的 harbor 中新增加了 helm charts 的管理功能,这样就可以利用 harbor 同时管理镜像和 helm charts 了，在部署 kubernetes 相关应用时就比较方便","date":1547779357,"description":"在 v1.6 版本的 harbor 中新增加了 helm charts 的管理功能,这样就可以利用 harbor 同时管理镜像和 helm charts 了，在部署 kubernetes 相关应用时就比较方便","dir":"post\\","excerpt_html":"在 v1.6 版本的 harbor 中新增加了 helm charts 的管理功能,这样就可以利用 harbor 同时管理镜像和 helm charts 了，在部署 kubernetes 相关应用时就比较方便","excerpt_text":"在 v1.6 版本的 harbor 中新增加了 helm charts 的管理功能,这样就可以利用 harbor 同时管理镜像和 helm charts 了，在部署 kubernetes 相关应用时就比较方便","expirydate":-62135596800,"fuzzywordcount":1500,"html":"在 v1.6 版本的 harbor 中新增加了 helm charts 的管理功能,这样就可以利用 harbor 同时管理镜像和 helm charts 了，在部署 kubernetes 相关应用时就比较方便","keywords":[],"kind":"page","lang":"en","lastmod":1547779357,"objectID":"d109ad7471c8b8587a16a42f89c8779b","permalink":"https://aeric.io/post/harbor-manage-helm-charts/","publishdate":"2019-01-18T10:42:37+08:00","readingtime":3,"relpermalink":"/post/harbor-manage-helm-charts/","section":"post","summary":"在 v1.6 版本的 harbor 中新增加了 helm charts 的管理功能,这样就可以利用 harbor 同时管理镜像和 helm charts 了，在部署 kubernetes 相关应用时就比较方便，本次尝试用 harbor 来管理 helm charts。","tags":["Harbor","Helm","Kubernetes"],"title":"用 Harbor 管理 Helm Charts","type":"post","url":"/post/harbor-manage-helm-charts/","weight":0,"wordcount":1473},{"author":null,"categories":["TECH"],"content":"之前已经在 kubernetes 集群中安装了 Helm 和 Tiller，那么接下来需要熟悉一下 Helm 的基本应用，主要包括利用 Helm 创建、打包、分发到本地仓库等等基本操作。","date":1547545402,"description":"之前已经在 kubernetes 集群中安装了 Helm 和 Tiller，那么接下来需要熟悉一下 Helm 的基本应用，主要包括利用 Helm 创建、打包、分发到本地仓库等等基本操作。","dir":"post\\","excerpt_html":"之前已经在 kubernetes 集群中安装了 Helm 和 Tiller，那么接下来需要熟悉一下 Helm 的基本应用，主要包括利用 Helm 创建、打包、分发到本地仓库等等基本操作。","excerpt_text":"之前已经在 kubernetes 集群中安装了 Helm 和 Tiller，那么接下来需要熟悉一下 Helm 的基本应用，主要包括利用 Helm 创建、打包、分发到本地仓库等等基本操作。","expirydate":-62135596800,"fuzzywordcount":3800,"html":"之前已经在 kubernetes 集群中安装了 Helm 和 Tiller，那么接下来需要熟悉一下 Helm 的基本应用，主要包括利用 Helm 创建、打包、分发到本地仓库等等基本操作。","keywords":[],"kind":"page","lang":"en","lastmod":1547545402,"objectID":"19241571fc02e589ed1ff291830afc7e","permalink":"https://aeric.io/post/k8s-helm-application/","publishdate":"2019-01-15T17:43:22+08:00","readingtime":8,"relpermalink":"/post/k8s-helm-application/","section":"post","summary":"之前在 kubernetes 集群中已经安装了 Helm 和 Tiller，那么接下来我们需要熟悉一下 Helm 的基本应用，主要包括利用 Helm 创建、打包、分发、安装、升级及回滚 kubernetes 应用。 创","tags":["Helm","Kubernetes"],"title":"K8S 包管理工具 Helm - 应用","type":"post","url":"/post/k8s-helm-application/","weight":0,"wordcount":3772},{"author":null,"categories":["TECH"],"content":"Helm Chart 是用来封装 Kubernetes 原生应用程序的一系列 YAML 文件。可以在你部署应用的时候自定义应用程序的一些 Metadata，以便于应用程序的分发。本文档在 Kubernetes 集群安装 Helm","date":1547545314,"description":"Helm Chart 是用来封装 Kubernetes 原生应用程序的一系列 YAML 文件。可以在你部署应用的时候自定义应用程序的一些 Metadata，以便于应用程序的分发。本文档在 Kubernetes 集群安装 Helm","dir":"post\\","excerpt_html":"Helm Chart 是用来封装 Kubernetes 原生应用程序的一系列 YAML 文件。可以在你部署应用的时候自定义应用程序的一些 Metadata，以便于应用程序的分发。本文档在 Kubernetes 集群安装 Helm","excerpt_text":"Helm Chart 是用来封装 Kubernetes 原生应用程序的一系列 YAML 文件。可以在你部署应用的时候自定义应用程序的一些 Metadata，以便于应用程序的分发。本文档在 Kubernetes 集群安装 Helm","expirydate":-62135596800,"fuzzywordcount":1200,"html":"Helm Chart 是用来封装 Kubernetes 原生应用程序的一系列 YAML 文件。可以在你部署应用的时候自定义应用程序的一些 Metadata，以便于应用程序的分发。本文档在 Kubernetes 集群安装 Helm","keywords":[],"kind":"page","lang":"en","lastmod":1547545314,"objectID":"4114e15fd2086d972461887db027c7ea","permalink":"https://aeric.io/post/k8s-helm-installation/","publishdate":"2019-01-15T17:41:54+08:00","readingtime":3,"relpermalink":"/post/k8s-helm-installation/","section":"post","summary":"前期在 Kubernetes 集群中部署应用多少有点不适应，因为我们需要维护的资源配置清单 yaml 文件随着应用的增加，对应的文件也越来越多，这就在一定程度上导致了以下几","tags":["Helm","Kubernetes"],"title":"K8S 包管理工具 Helm - 安装","type":"post","url":"/post/k8s-helm-installation/","weight":0,"wordcount":1126},{"author":null,"categories":["TECH"],"content":"Helm 是 Kubernetes 生态系统中的一个软件包管理工具，Helm是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。 它有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM","date":1547545300,"description":"Helm 是 Kubernetes 生态系统中的一个软件包管理工具，Helm是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。 它有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM","dir":"post\\","excerpt_html":"Helm 是 Kubernetes 生态系统中的一个软件包管理工具，Helm是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。 它有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM","excerpt_text":"Helm 是 Kubernetes 生态系统中的一个软件包管理工具，Helm是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。 它有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM","expirydate":-62135596800,"fuzzywordcount":1200,"html":"Helm 是 Kubernetes 生态系统中的一个软件包管理工具，Helm是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。 它有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM","keywords":[],"kind":"page","lang":"en","lastmod":1547545300,"objectID":"00114d961aeb4b5c2cb1ee270fc16671","permalink":"https://aeric.io/post/k8s-helm-introduction/","publishdate":"2019-01-15T17:41:40+08:00","readingtime":3,"relpermalink":"/post/k8s-helm-introduction/","section":"post","summary":"Helm 是 Kubernetes 生态系统中的一个软件包管理工具，Helm 是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。 它有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM Helm 官方网站","tags":["Helm","Kubernetes"],"title":"K8S 包管理工具 Helm - 介绍","type":"post","url":"/post/k8s-helm-introduction/","weight":0,"wordcount":1139},{"author":null,"categories":["TOOLS"],"content":"随着HTTPS的越来越普及，现在绝大数的WEB网站已经支持了全站HTTPS，来防止网络攻击者观察或注入页面内容等，这里介绍一种在本地生成TLS证书的工具:mkcert","date":1547469033,"description":"随着HTTPS的越来越普及，现在绝大数的WEB网站已经支持了全站HTTPS，来防止网络攻击者观察或注入页面内容等，这里介绍一种在本地生成TLS证书的工具:mkcert","dir":"post\\","excerpt_html":"随着HTTPS的越来越普及，现在绝大数的WEB网站已经支持了全站HTTPS，来防止网络攻击者观察或注入页面内容等，这里介绍一种在本地生成TLS证书的工具:mkcert","excerpt_text":"随着HTTPS的越来越普及，现在绝大数的WEB网站已经支持了全站HTTPS，来防止网络攻击者观察或注入页面内容等，这里介绍一种在本地生成TLS证书的工具:mkcert","expirydate":-62135596800,"fuzzywordcount":1200,"html":"随着HTTPS的越来越普及，现在绝大数的WEB网站已经支持了全站HTTPS，来防止网络攻击者观察或注入页面内容等，这里介绍一种在本地生成TLS证书的工具:mkcert","keywords":[],"kind":"page","lang":"en","lastmod":1547469033,"objectID":"ce5f8fe5a365adf52251e9ebc6f99dad","permalink":"https://aeric.io/post/mkcert-valid-https-certificates-for-localhost/","publishdate":"2019-01-14T20:30:33+08:00","readingtime":3,"relpermalink":"/post/mkcert-valid-https-certificates-for-localhost/","section":"post","summary":"随着 HTTPS 的越来越普及，现在绝大数的 WEB 网站已经支持了全站 HTTPS，来防止网络攻击者观察或注入页面内容等，这里介绍一种在本地生成 TLS 证书的工具: mkcert","tags":["Mkcert","Https"],"title":"mkcert:本地有效的https证书","type":"post","url":"/post/mkcert-valid-https-certificates-for-localhost/","weight":0,"wordcount":1100},{"author":null,"categories":["TECH"],"content":"本次 Mesos 集群部署主要基于Zookeeper+Mesos+Marathon+Docker，各个组件均需单独部署并配置，具体安装配置过程可以参考如下过程，","date":1547297053,"description":"本次 Mesos 集群部署主要基于Zookeeper+Mesos+Marathon+Docker，各个组件均需单独部署并配置，具体安装配置过程可以参考如下过程，","dir":"post\\","excerpt_html":"本次 Mesos 集群部署主要基于Zookeeper+Mesos+Marathon+Docker，各个组件均需单独部署并配置，具体安装配置过程可以参考如下过程，","excerpt_text":"本次 Mesos 集群部署主要基于Zookeeper+Mesos+Marathon+Docker，各个组件均需单独部署并配置，具体安装配置过程可以参考如下过程，","expirydate":-62135596800,"fuzzywordcount":1500,"html":"本次 Mesos 集群部署主要基于Zookeeper+Mesos+Marathon+Docker，各个组件均需单独部署并配置，具体安装配置过程可以参考如下过程，","keywords":[],"kind":"page","lang":"en","lastmod":1547297053,"objectID":"89721ad9123d7d3cba45fba377d92b54","permalink":"https://aeric.io/post/mesos-cluster-installation-b/","publishdate":"2019-01-12T20:44:13+08:00","readingtime":3,"relpermalink":"/post/mesos-cluster-installation-b/","section":"post","summary":"本次部署基于 Zookeeper+Mesos+Marathon+Docker，具体部署环境如下： mesos-master1 172.16.8.120 mesos+zookeeper+marathon mesos-master2 172.16.8.121 mesos+zookeeper+marathon mesos-master3 172.16.8.122 mesos+zookeeper+marathon mesos-slave1 172.16.8.110 mesos+docker 上述所有机器系统版本如","tags":["Docker","Mesos","Marathon"],"title":"Mesos集群二进制方式部署二 ","type":"post","url":"/post/mesos-cluster-installation-b/","weight":0,"wordcount":1459},{"author":null,"categories":["TECH"],"content":"现有公司一套基础架构主要由 Mesos 集群组成，配合 Marathon 实现容器编排，并利用 Zookeeper 实现 Mesos 和 Marathon 集群的高可用，本文档主要介绍集群中各组件功能","date":1547297024,"description":"现有公司一套基础架构主要由 Mesos 集群组成，配合 Marathon 实现容器编排，并利用 Zookeeper 实现 Mesos 和 Marathon 集群的高可用，本文档主要介绍集群中各组件功能","dir":"post\\","excerpt_html":"现有公司一套基础架构主要由 Mesos 集群组成，配合 Marathon 实现容器编排，并利用 Zookeeper 实现 Mesos 和 Marathon 集群的高可用，本文档主要介绍集群中各组件功能","excerpt_text":"现有公司一套基础架构主要由 Mesos 集群组成，配合 Marathon 实现容器编排，并利用 Zookeeper 实现 Mesos 和 Marathon 集群的高可用，本文档主要介绍集群中各组件功能","expirydate":-62135596800,"fuzzywordcount":3800,"html":"现有公司一套基础架构主要由 Mesos 集群组成，配合 Marathon 实现容器编排，并利用 Zookeeper 实现 Mesos 和 Marathon 集群的高可用，本文档主要介绍集群中各组件功能","keywords":[],"kind":"page","lang":"en","lastmod":1547297024,"objectID":"21c7e8a0122c1633c4dca03b11bcbf1a","permalink":"https://aeric.io/post/mesos-cluster-installation-a/","publishdate":"2019-01-12T20:43:44+08:00","readingtime":8,"relpermalink":"/post/mesos-cluster-installation-a/","section":"post","summary":"私有化 PaaS 平台主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成，各组件用途及扮演的角色信息如下所示： Zookeeper: Zookeeper 是一个分布式的，","tags":["Docker","Mesos","Marathon"],"title":"Mesos集群二进制方式部署一","type":"post","url":"/post/mesos-cluster-installation-a/","weight":0,"wordcount":3739},{"author":null,"categories":["TECH"],"content":"之前安装的harbor版本是v1.6的版本，由于在v1.7版本中新增加了对helm的支持，所以为了更充分的利用harbor镜像仓库，我们将进行一次升级，将harbor升级到目前最新的v1.7.1版本","date":1547102221,"description":"之前安装的harbor版本是v1.6的版本，由于在v1.7版本中新增加了对helm的支持，所以为了更充分的利用harbor镜像仓库，我们将进行一次升级，将harbor升级到目前最新的v1.7.1版本","dir":"post\\","excerpt_html":"之前安装的harbor版本是v1.6的版本，由于在v1.7版本中新增加了对helm的支持，所以为了更充分的利用harbor镜像仓库，我们将进行一次升级，将harbor升级到目前最新的v1.7.1版本","excerpt_text":"之前安装的harbor版本是v1.6的版本，由于在v1.7版本中新增加了对helm的支持，所以为了更充分的利用harbor镜像仓库，我们将进行一次升级，将harbor升级到目前最新的v1.7.1版本","expirydate":-62135596800,"fuzzywordcount":1400,"html":"之前安装的harbor版本是v1.6的版本，由于在v1.7版本中新增加了对helm的支持，所以为了更充分的利用harbor镜像仓库，我们将进行一次升级，将harbor升级到目前最新的v1.7.1版本","keywords":[],"kind":"page","lang":"en","lastmod":1547102221,"objectID":"b54c182f1f44252b30a24b7288dde07d","permalink":"https://aeric.io/post/harbor-upgrade-guide/","publishdate":"2019-01-10T14:37:01+08:00","readingtime":3,"relpermalink":"/post/harbor-upgrade-guide/","section":"post","summary":"之前安装的 harbor版本是 v1.6的版本，由于在 v1.7版本中新增加了对 helm的支持，所以为了更充分的利用 harbor 镜像仓库，我们将进行一次升级","tags":["Docker","Docker-compose","Harbor"],"title":"记一次harbor的升级之旅","type":"post","url":"/post/harbor-upgrade-guide/","weight":0,"wordcount":1394},{"author":null,"categories":["TECH"],"content":"Harbor 是存放镜像的私有仓库，我们在企业内为了能更好的管理我们的业务镜像，我们可以将其上传至我们的私有镜像仓库，本次利用 Harbor 搭建自己的私有镜像仓库","date":1547091421,"description":"Harbor 是存放镜像的私有仓库，我们在企业内为了能更好的管理我们的业务镜像，我们可以将其上传至我们的私有镜像仓库，本次利用 Harbor 搭建自己的私有镜像仓库","dir":"post\\","excerpt_html":"Harbor 是存放镜像的私有仓库，我们在企业内为了能更好的管理我们的业务镜像，我们可以将其上传至我们的私有镜像仓库，本次利用 Harbor 搭建自己的私有镜像仓库","excerpt_text":"Harbor 是存放镜像的私有仓库，我们在企业内为了能更好的管理我们的业务镜像，我们可以将其上传至我们的私有镜像仓库，本次利用 Harbor 搭建自己的私有镜像仓库","expirydate":-62135596800,"fuzzywordcount":1000,"html":"Harbor 是存放镜像的私有仓库，我们在企业内为了能更好的管理我们的业务镜像，我们可以将其上传至我们的私有镜像仓库，本次利用 Harbor 搭建自己的私有镜像仓库","keywords":[],"kind":"page","lang":"en","lastmod":1547091421,"objectID":"65c043c5b0805d0218adabf8efed0e2e","permalink":"https://aeric.io/post/harbor-installation/","publishdate":"2019-01-10T11:37:01+08:00","readingtime":2,"relpermalink":"/post/harbor-installation/","section":"post","summary":"在一个企业里，企业自有的私有仓库是必须的，配置私有 docker 镜像仓库 harbor，为的是将自己构建的镜像 push 到私有镜像仓库中，方便以后拉取。 Harbor 的官方站","tags":["Harbor","Docker","Docker-compose"],"title":"Harbor 私有镜像仓库安装配置","type":"post","url":"/post/harbor-installation/","weight":0,"wordcount":949},{"author":null,"categories":["TECH"],"content":"Kubernetes 1.8关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server","date":1546575816,"description":"Kubernetes 1.8关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server","dir":"post\\","excerpt_html":"Kubernetes 1.8关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server","excerpt_text":"Kubernetes 1.8关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server","expirydate":-62135596800,"fuzzywordcount":1500,"html":"Kubernetes 1.8关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server","keywords":[],"kind":"page","lang":"en","lastmod":1546575816,"objectID":"7bdc751d0db86aeac6bd8cf50b5be9ff","permalink":"https://aeric.io/post/k8s-metrics-server-installation/","publishdate":"2019-01-04T12:23:36+08:00","readingtime":3,"relpermalink":"/post/k8s-metrics-server-installation/","section":"post","summary":"Kubernetes 1.8 关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server。 Metrics Server 的安装 首先","tags":["Kubernetes","Metrics","Docker"],"title":"Kubernetes集群安装Metrics Server","type":"post","url":"/post/k8s-metrics-server-installation/","weight":0,"wordcount":1494},{"author":null,"categories":["TECH"],"content":"整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成,本次部署的是基于三个 master 和一个 salve 的 mesos 集群，实现高可用，高扩展性","date":1544085248,"description":"整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成,本次部署的是基于三个 master 和一个 salve 的 mesos 集群，实现高可用，高扩展性","dir":"post\\","excerpt_html":"整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成,本次部署的是基于三个 master 和一个 salve 的 mesos 集群，实现高可用，高扩展性","excerpt_text":"整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成,本次部署的是基于三个 master 和一个 salve 的 mesos 集群，实现高可用，高扩展性","expirydate":-62135596800,"fuzzywordcount":2100,"html":"整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成,本次部署的是基于三个 master 和一个 salve 的 mesos 集群，实现高可用，高扩展性","keywords":[],"kind":"page","lang":"en","lastmod":1544085248,"objectID":"d0aed4c7067527fab4f971b03c230f92","permalink":"https://aeric.io/post/mesos-container-cluster-installation/","publishdate":"2018-12-06T16:34:08+08:00","readingtime":5,"relpermalink":"/post/mesos-container-cluster-installation/","section":"post","summary":"整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成，各组件用途及扮演的角色信息如下所示： Zookeeper: Zookeeper 是一个分布式的，开","tags":["Docker","Mesos","Zookeeper","Marathon"],"title":"容器化部署 Mesos 集群","type":"post","url":"/post/mesos-container-cluster-installation/","weight":0,"wordcount":2099},{"author":null,"categories":["TECH"],"content":"一般情况下，如果只是为了探究 RabbitMQ 可以安装单机版的服务，但是出于 MQ 中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑使用 RabbitMQ 的集群方案。","date":1543740495,"description":"一般情况下，如果只是为了探究 RabbitMQ 可以安装单机版的服务，但是出于 MQ 中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑使用 RabbitMQ 的集群方案。","dir":"post\\","excerpt_html":"一般情况下，如果只是为了探究 RabbitMQ 可以安装单机版的服务，但是出于 MQ 中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑使用 RabbitMQ 的集群方案。","excerpt_text":"一般情况下，如果只是为了探究 RabbitMQ 可以安装单机版的服务，但是出于 MQ 中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑使用 RabbitMQ 的集群方案。","expirydate":-62135596800,"fuzzywordcount":2700,"html":"一般情况下，如果只是为了探究 RabbitMQ 可以安装单机版的服务，但是出于 MQ 中间件本身的可靠性、并发性、吞吐量和消息堆积能力等问题的考虑，在生产环境上一般都会考虑使用 RabbitMQ 的集群方案。","keywords":[],"kind":"page","lang":"en","lastmod":1543740495,"objectID":"c4a873f588c60c3eeca1ce4158ed1ffc","permalink":"https://aeric.io/post/rabbitmq-cluster-installation/","publishdate":"2018-12-02T16:48:15+08:00","readingtime":6,"relpermalink":"/post/rabbitmq-cluster-installation/","section":"post","summary":"一般情况下，如果只是为了探究 RabbitMQ 或者验证业务工程的正确性那么在本地环境或者测试环境上使用其单实例部署就可以了，但是出于 MQ 中间件本身的可靠性、并","tags":["RabbitMQ","Erlang"],"title":"Linux 配置 RabbitMQ 集群","type":"post","url":"/post/rabbitmq-cluster-installation/","weight":0,"wordcount":2665},{"author":null,"categories":["TECH"],"content":"RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可\u003e伸缩性出名的 Erlang 开发设计，因此也是继承了这些优点。","date":1543740466,"description":"RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可\u003e伸缩性出名的 Erlang 开发设计，因此也是继承了这些优点。","dir":"post\\","excerpt_html":"RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可\u003e伸缩性出名的 Erlang 开发设计，因此也是继承了这些优点。","excerpt_text":"RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可\u003e伸缩性出名的 Erlang 开发设计，因此也是继承了这些优点。","expirydate":-62135596800,"fuzzywordcount":1200,"html":"RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可\u003e伸缩性出名的 Erlang 开发设计，因此也是继承了这些优点。","keywords":[],"kind":"page","lang":"en","lastmod":1543740466,"objectID":"17051754652d0b6210bbbf5198cdf5d9","permalink":"https://aeric.io/post/rabbitmq-single-installation/","publishdate":"2018-12-02T16:47:46+08:00","readingtime":3,"relpermalink":"/post/rabbitmq-single-installation/","section":"post","summary":"RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可伸缩性出名的 Erlang 开发设计，因此也是继承了这些优点。 本文档旨在基于 Erlang 环境在 CentOS 7 系统","tags":["RabbitMQ","Erlang"],"title":"Linux 配置 RabbitMQ 服务","type":"post","url":"/post/rabbitmq-single-installation/","weight":0,"wordcount":1153},{"author":null,"categories":["TECH"],"content":"本文档旨在在 CentOS 7 系统上安装配置 Erlang 环境，因为 RabbitMQ 是基于 Erlang 开发设计的，所以本文档主要服务于后续 RabbitMQ 的安装和配置。","date":1543740411,"description":"本文档旨在在 CentOS 7 系统上安装配置 Erlang 环境，因为 RabbitMQ 是基于 Erlang 开发设计的，所以本文档主要服务于后续 RabbitMQ 的安装和配置。","dir":"post\\","excerpt_html":"本文档旨在在 CentOS 7 系统上安装配置 Erlang 环境，因为 RabbitMQ 是基于 Erlang 开发设计的，所以本文档主要服务于后续 RabbitMQ 的安装和配置。","excerpt_text":"本文档旨在在 CentOS 7 系统上安装配置 Erlang 环境，因为 RabbitMQ 是基于 Erlang 开发设计的，所以本文档主要服务于后续 RabbitMQ 的安装和配置。","expirydate":-62135596800,"fuzzywordcount":500,"html":"本文档旨在在 CentOS 7 系统上安装配置 Erlang 环境，因为 RabbitMQ 是基于 Erlang 开发设计的，所以本文档主要服务于后续 RabbitMQ 的安装和配置。","keywords":[],"kind":"page","lang":"en","lastmod":1543740411,"objectID":"6dfeaf7f8be33579731f4f9ac1f63a65","permalink":"https://aeric.io/post/rabbitmq-erlang-installation/","publishdate":"2018-12-02T16:46:51+08:00","readingtime":1,"relpermalink":"/post/rabbitmq-erlang-installation/","section":"post","summary":"Erlang 是一种多用途编程语言，主要用于开发并发和分布式系统。它最初是一种专有的编程语言，Ericsson 使用它来开发电话和通信应用程序。 本文档旨在","tags":["RabbitMQ","Erlang"],"title":"RabbitMQ Erlang 环境配置","type":"post","url":"/post/rabbitmq-erlang-installation/","weight":0,"wordcount":416},{"author":null,"categories":["TECH"],"content":"Kubernetes集群的安装方式有很多种，这里我们为了更深入的了解Kubernetes集群中各组件的工作方式，本次部署集群采用纯手动二进制方式部署，也是对很早之前文档的一个总结","date":1543649714,"description":"Kubernetes集群的安装方式有很多种，这里我们为了更深入的了解Kubernetes集群中各组件的工作方式，本次部署集群采用纯手动二进制方式部署，也是对很早之前文档的一个总结","dir":"post\\","excerpt_html":"Kubernetes集群的安装方式有很多种，这里我们为了更深入的了解Kubernetes集群中各组件的工作方式，本次部署集群采用纯手动二进制方式部署，也是对很早之前文档的一个总结","excerpt_text":"Kubernetes集群的安装方式有很多种，这里我们为了更深入的了解Kubernetes集群中各组件的工作方式，本次部署集群采用纯手动二进制方式部署，也是对很早之前文档的一个总结","expirydate":-62135596800,"fuzzywordcount":400,"html":"Kubernetes集群的安装方式有很多种，这里我们为了更深入的了解Kubernetes集群中各组件的工作方式，本次部署集群采用纯手动二进制方式部署，也是对很早之前文档的一个总结","keywords":[],"kind":"page","lang":"en","lastmod":1543649714,"objectID":"6bd92e2dc38326cc004b754846f4e0b3","permalink":"https://aeric.io/post/k8s-installation-with-binary/","publishdate":"2018-12-01T15:35:14+08:00","readingtime":1,"relpermalink":"/post/k8s-installation-with-binary/","section":"post","summary":"在之前的博客中也写到过如何纯手工搭建自己的 Kubernetes 集群，本文档主要是对之前文档的一个总结，具体过程可以参考如下安装流程： Kubernetes-创建","tags":["Kubernetes"],"title":"二进制方式部署Kubernetes集群","type":"post","url":"/post/k8s-installation-with-binary/","weight":0,"wordcount":300},{"author":null,"categories":["TECH"],"content":"","date":1543646114,"description":"","dir":"post\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":[],"kind":"page","lang":"en","lastmod":1543646114,"objectID":"4e147d4f28f40f49d877f3aa61ec9385","permalink":"https://aeric.io/post/k8s-dns-addons-installation/","publishdate":"2018-12-01T14:35:14+08:00","readingtime":3,"relpermalink":"/post/k8s-dns-addons-installation/","section":"post","summary":"kube-dns 官方的 yaml 文件其实在我们先前下载的 kubernetes server 软件包内，具体路径为：/srv/kubernetes/cluster/addons/dns 我是把 kuberntes 解压","tags":["Kubernetes","Docker"],"title":"Kubernetes集群部署DNS插件","type":"post","url":"/post/k8s-dns-addons-installation/","weight":0,"wordcount":1172},{"author":null,"categories":["TECH"],"content":"在Kubernetes集群中，一般Node节点上的服务主要是kubelet和kube-proxy服务，当然还有flannel网络插件等服务，本文档主要说明部署Node节点上的服务","date":1543574114,"description":"在Kubernetes集群中，一般Node节点上的服务主要是kubelet和kube-proxy服务，当然还有flannel网络插件等服务，本文档主要说明部署Node节点上的服务","dir":"post\\","excerpt_html":"在Kubernetes集群中，一般Node节点上的服务主要是kubelet和kube-proxy服务，当然还有flannel网络插件等服务，本文档主要说明部署Node节点上的服务","excerpt_text":"在Kubernetes集群中，一般Node节点上的服务主要是kubelet和kube-proxy服务，当然还有flannel网络插件等服务，本文档主要说明部署Node节点上的服务","expirydate":-62135596800,"fuzzywordcount":2600,"html":"在Kubernetes集群中，一般Node节点上的服务主要是kubelet和kube-proxy服务，当然还有flannel网络插件等服务，本文档主要说明部署Node节点上的服务","keywords":[],"kind":"page","lang":"en","lastmod":1543574114,"objectID":"9b25fcb18c4028cd6dca19dfaac37a3f","permalink":"https://aeric.io/post/k8s-nodes-installation/","publishdate":"2018-11-30T18:35:14+08:00","readingtime":6,"relpermalink":"/post/k8s-nodes-installation/","section":"post","summary":"kubernetes node 节点包含如下组件： Flanneld Docker:docker直接用yum安装即可 kubelet kube-proxy 注意：每台 node 上都需要安装 flannel，master 节点上可以不必","tags":["Kubernetes","Docker"],"title":"Kubernetes集群部署Node节点服务","type":"post","url":"/post/k8s-nodes-installation/","weight":0,"wordcount":2588},{"author":null,"categories":["TECH"],"content":"在kubernetes集群中所有的node节点都需要安装网络插件才能让所有的Pod加入到同一个局域网中，本文是安装flannel网络插件的参考文档，具体操作可以参考正文","date":1543566914,"description":"在kubernetes集群中所有的node节点都需要安装网络插件才能让所有的Pod加入到同一个局域网中，本文是安装flannel网络插件的参考文档，具体操作可以参考正文","dir":"post\\","excerpt_html":"在kubernetes集群中所有的node节点都需要安装网络插件才能让所有的Pod加入到同一个局域网中，本文是安装flannel网络插件的参考文档，具体操作可以参考正文","excerpt_text":"在kubernetes集群中所有的node节点都需要安装网络插件才能让所有的Pod加入到同一个局域网中，本文是安装flannel网络插件的参考文档，具体操作可以参考正文","expirydate":-62135596800,"fuzzywordcount":900,"html":"在kubernetes集群中所有的node节点都需要安装网络插件才能让所有的Pod加入到同一个局域网中，本文是安装flannel网络插件的参考文档，具体操作可以参考正文","keywords":[],"kind":"page","lang":"en","lastmod":1543566914,"objectID":"46c99d85710e436ca9b891c460e609be","permalink":"https://aeric.io/post/k8s-flannel-and-docker-config/","publishdate":"2018-11-30T16:35:14+08:00","readingtime":2,"relpermalink":"/post/k8s-flannel-and-docker-config/","section":"post","summary":"检查 TLS 证书 [root@ceph-node1 ~]# ls /etc/kubernetes/ssl/ admin-key.pem admin.pem ca-key.pem ca.pem kube-proxy-key.pem kube-proxy.pem kubernetes-key.pem kubernetes.pem 配置 Flannel 服务 建议直接使用 yum 安装 flanneld，除非对版本有特殊需求，默认安装的是 v0.7.1 版本的 flannel。 安","tags":["Kubernetes","Docker"],"title":"Kubernetes集群配置Flannel服务","type":"post","url":"/post/k8s-flannel-and-docker-config/","weight":0,"wordcount":832},{"author":null,"categories":["TECH"],"content":"在Kubernetes集群中，Master节点上主要由kube-apiserver、kube-scheduler以及kube-controller-manager等服务维护整个集群的正常运行，本文主要介绍配置Master节点上的相关服务","date":1543563314,"description":"在Kubernetes集群中，Master节点上主要由kube-apiserver、kube-scheduler以及kube-controller-manager等服务维护整个集群的正常运行，本文主要介绍配置Master节点上的相关服务","dir":"post\\","excerpt_html":"在Kubernetes集群中，Master节点上主要由kube-apiserver、kube-scheduler以及kube-controller-manager等服务维护整个集群的正常运行，本文主要介绍配置Master节点上的相关服务","excerpt_text":"在Kubernetes集群中，Master节点上主要由kube-apiserver、kube-scheduler以及kube-controller-manager等服务维护整个集群的正常运行，本文主要介绍配置Master节点上的相关服务","expirydate":-62135596800,"fuzzywordcount":2600,"html":"在Kubernetes集群中，Master节点上主要由kube-apiserver、kube-scheduler以及kube-controller-manager等服务维护整个集群的正常运行，本文主要介绍配置Master节点上的相关服务","keywords":[],"kind":"page","lang":"en","lastmod":1543563314,"objectID":"6ccf1cfbaea01d8266eacfcdfddf9920","permalink":"https://aeric.io/post/k8s-master-installation/","publishdate":"2018-11-30T15:35:14+08:00","readingtime":6,"relpermalink":"/post/k8s-master-installation/","section":"post","summary":"kubernetes master 节点包含的组件包括以下几个部分： 1、 kube-apiserver 2、 kube-scheduler 3、 kube-controller-manager 本次部署我们将三个组件安装在一台机器上，kube-scheduler、kube-con","tags":["Kubernetes","Docker"],"title":"Kubernetes集群部署Master节点服务","type":"post","url":"/post/k8s-master-installation/","weight":0,"wordcount":2576},{"author":null,"categories":["TECH"],"content":"kuberntes 集群使用 etcd 存储所有数据,本部分我们介绍部署一个三节点的高可用 etcd 集群，这三个节点复用 kubernetes master 主机","date":1543559714,"description":"kuberntes 集群使用 etcd 存储所有数据,本部分我们介绍部署一个三节点的高可用 etcd 集群，这三个节点复用 kubernetes master 主机","dir":"post\\","excerpt_html":"kuberntes 集群使用 etcd 存储所有数据,本部分我们介绍部署一个三节点的高可用 etcd 集群，这三个节点复用 kubernetes master 主机","excerpt_text":"kuberntes 集群使用 etcd 存储所有数据,本部分我们介绍部署一个三节点的高可用 etcd 集群，这三个节点复用 kubernetes master 主机","expirydate":-62135596800,"fuzzywordcount":1100,"html":"kuberntes 集群使用 etcd 存储所有数据,本部分我们介绍部署一个三节点的高可用 etcd 集群，这三个节点复用 kubernetes master 主机","keywords":[],"kind":"page","lang":"en","lastmod":1543559714,"objectID":"43b51aa7ee5a5a5996f4b5d445411556","permalink":"https://aeric.io/post/k8s-etcd-cluster-installation/","publishdate":"2018-11-30T14:35:14+08:00","readingtime":3,"relpermalink":"/post/k8s-etcd-cluster-installation/","section":"post","summary":"kuberntes 集群使用 etcd 存储所有数据,本部分我们介绍部署一个三节点的高可用 etcd 集群，这三个节点复用kubernetes master机器。 三个 etcd 节点如下所示","tags":["Kubernetes","Docker"],"title":"Kubernetes集群创建高可用etcd集群","type":"post","url":"/post/k8s-etcd-cluster-installation/","weight":0,"wordcount":1051},{"author":null,"categories":["TECH"],"content":"在kubernetes集群中kubectl是个非常重要的命令行工具，它的作用相当于docker的相关命令，可以通过自己定义的yaml文件启动相关pod及service相关资源","date":1543559124,"description":"在kubernetes集群中kubectl是个非常重要的命令行工具，它的作用相当于docker的相关命令，可以通过自己定义的yaml文件启动相关pod及service相关资源","dir":"post\\","excerpt_html":"在kubernetes集群中kubectl是个非常重要的命令行工具，它的作用相当于docker的相关命令，可以通过自己定义的yaml文件启动相关pod及service相关资源","excerpt_text":"在kubernetes集群中kubectl是个非常重要的命令行工具，它的作用相当于docker的相关命令，可以通过自己定义的yaml文件启动相关pod及service相关资源","expirydate":-62135596800,"fuzzywordcount":600,"html":"在kubernetes集群中kubectl是个非常重要的命令行工具，它的作用相当于docker的相关命令，可以通过自己定义的yaml文件启动相关pod及service相关资源","keywords":[],"kind":"page","lang":"en","lastmod":1543559124,"objectID":"aa1194dccc317e6a3a083b9d068bf0bf","permalink":"https://aeric.io/post/k8s-kubectl-installation/","publishdate":"2018-11-30T14:25:24+08:00","readingtime":2,"relpermalink":"/post/k8s-kubectl-installation/","section":"post","summary":"其实 kubernetes 的 server 软件包基本涵盖了 kubernetes 几乎所有的工具，所以我们只需要下载 kubernetes 的 server 软件包即可。 kubernetes 源码下载地址： https://github.com/kubernetes/kubernetes/releases/ 本文档是基于 v1.9.6 版本部署 kubernetes 集群，其他版本基本","tags":["Kubernetes","Docker"],"title":"Kubernetes集群安装kubectl工具","type":"post","url":"/post/k8s-kubectl-installation/","weight":0,"wordcount":512},{"author":null,"categories":["TECH"],"content":"kubelet 和 kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权，所以这里需要自己创建 kubeconfig 文件，具体操作可以参考如下","date":1543559114,"description":"kubelet 和 kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权，所以这里需要自己创建 kubeconfig 文件，具体操作可以参考如下","dir":"post\\","excerpt_html":"kubelet 和 kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权，所以这里需要自己创建 kubeconfig 文件，具体操作可以参考如下","excerpt_text":"kubelet 和 kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权，所以这里需要自己创建 kubeconfig 文件，具体操作可以参考如下","expirydate":-62135596800,"fuzzywordcount":900,"html":"kubelet 和 kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权，所以这里需要自己创建 kubeconfig 文件，具体操作可以参考如下","keywords":[],"kind":"page","lang":"en","lastmod":1543559114,"objectID":"03024a18840284cc8a4ef1d9ba503541","permalink":"https://aeric.io/post/k8s-create-kubeconfig/","publishdate":"2018-11-30T14:25:14+08:00","readingtime":2,"relpermalink":"/post/k8s-create-kubeconfig/","section":"post","summary":"需要说明的是 kubelet、kube-proxy 等 Node 机器上的进程与 Master 机器的 kube-apiserver 进程通信时需要认证和授权； kubernetes v1.4 版本开始支持由 kube-apiserver 为客户端生成 TLS 证书","tags":["Kubernetes","Docker"],"title":"Kubernetes集群创建配置文件","type":"post","url":"/post/k8s-create-kubeconfig/","weight":0,"wordcount":899},{"author":null,"categories":["TECH"],"content":"Kubernetes 系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成 Certificate Authority (CA) 和其它证书","date":1543557914,"description":"Kubernetes 系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成 Certificate Authority (CA) 和其它证书","dir":"post\\","excerpt_html":"Kubernetes 系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成 Certificate Authority (CA) 和其它证书","excerpt_text":"Kubernetes 系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成 Certificate Authority (CA) 和其它证书","expirydate":-62135596800,"fuzzywordcount":1900,"html":"Kubernetes 系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成 Certificate Authority (CA) 和其它证书","keywords":[],"kind":"page","lang":"en","lastmod":1543557914,"objectID":"049ebdc6af9ba7f53d022f9e7e68850f","permalink":"https://aeric.io/post/k8s-create-tls-and-keys/","publishdate":"2018-11-30T14:05:14+08:00","readingtime":4,"relpermalink":"/post/k8s-create-tls-and-keys/","section":"post","summary":"集群环境如下： k8s-master: 192.168.8.66 k8s-nodes: 192.168.8.67 192.168.8.68 k8s-harbor: 192.168.8.69 创建TLS证书及密钥 kubernetes系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成","tags":["Kubernetes","Docker"],"title":"Kubernetes 集群创建 TLS 证书及密钥","type":"post","url":"/post/k8s-create-tls-and-keys/","weight":0,"wordcount":1846},{"author":null,"categories":["TECH"],"content":"在日常使用 docker 的过程中，一般 docker 默认的配置不能满足我们正常的业务需要，这个时候就需要我们对 docker 做一些其他的配置来实现我们的需求或者功能","date":1532871369,"description":"在日常使用 docker 的过程中，一般 docker 默认的配置不能满足我们正常的业务需要，这个时候就需要我们对 docker 做一些其他的配置来实现我们的需求或者功能","dir":"post\\","excerpt_html":"在日常使用 docker 的过程中，一般 docker 默认的配置不能满足我们正常的业务需要，这个时候就需要我们对 docker 做一些其他的配置来实现我们的需求或者功能","excerpt_text":"在日常使用 docker 的过程中，一般 docker 默认的配置不能满足我们正常的业务需要，这个时候就需要我们对 docker 做一些其他的配置来实现我们的需求或者功能","expirydate":-62135596800,"fuzzywordcount":800,"html":"在日常使用 docker 的过程中，一般 docker 默认的配置不能满足我们正常的业务需要，这个时候就需要我们对 docker 做一些其他的配置来实现我们的需求或者功能","keywords":[],"kind":"page","lang":"en","lastmod":1532871369,"objectID":"bf9861684ec68ba2b092e9a5c897033a","permalink":"https://aeric.io/post/docker-other-config/","publishdate":"2018-07-29T21:36:09+08:00","readingtime":2,"relpermalink":"/post/docker-other-config/","section":"post","summary":"同步容器与宿主机时间 在 Docker 容器创建好之后，可能会发现容器时间跟宿主机时间不一致，这就需要同步它们的时间，让容器时间跟宿主机时间保持一致。 宿主机","tags":["Docker"],"title":"Docker 服务的一些常用配置","type":"post","url":"/post/docker-other-config/","weight":0,"wordcount":745},{"author":null,"categories":["TOOLS"],"content":"PASS 是 Linux 上的一个简单的命令行密码管理器，它将密码存储在一个 gpg 加密后的文件里。这些加密后的文件很好地组织按目录结构存放，方便我们对密码进行管理。","date":1532847596,"description":"PASS 是 Linux 上的一个简单的命令行密码管理器，它将密码存储在一个 gpg 加密后的文件里。这些加密后的文件很好地组织按目录结构存放，方便我们对密码进行管理。","dir":"post\\","excerpt_html":"PASS 是 Linux 上的一个简单的命令行密码管理器，它将密码存储在一个 gpg 加密后的文件里。这些加密后的文件很好地组织按目录结构存放，方便我们对密码进行管理。","excerpt_text":"PASS 是 Linux 上的一个简单的命令行密码管理器，它将密码存储在一个 gpg 加密后的文件里。这些加密后的文件很好地组织按目录结构存放，方便我们对密码进行管理。","expirydate":-62135596800,"fuzzywordcount":1700,"html":"PASS 是 Linux 上的一个简单的命令行密码管理器，它将密码存储在一个 gpg 加密后的文件里。这些加密后的文件很好地组织按目录结构存放，方便我们对密码进行管理。","keywords":[],"kind":"page","lang":"en","lastmod":1532847596,"objectID":"640fa680ad1e7a9251b2a23e83de1e21","permalink":"https://aeric.io/post/pass-tool-guide/","publishdate":"2018-07-29T14:59:56+08:00","readingtime":4,"relpermalink":"/post/pass-tool-guide/","section":"post","summary":"关于 PASS 工具 PASS 是 Linux 上的一个简单的命令行密码管理器，它将密码存储在一个 gpg 加密后的文件里。这些加密后的文件很好地组织按目录结构存放，现在密码管理器","tags":["Pass"],"title":"使用PASS密码管理器管理密码","type":"post","url":"/post/pass-tool-guide/","weight":0,"wordcount":1683},{"author":null,"categories":["TECH"],"content":"国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务，本文档主要介绍如何配置镜像加速器","date":1532784935,"description":"国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务，本文档主要介绍如何配置镜像加速器","dir":"post\\","excerpt_html":"国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务，本文档主要介绍如何配置镜像加速器","excerpt_text":"国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务，本文档主要介绍如何配置镜像加速器","expirydate":-62135596800,"fuzzywordcount":500,"html":"国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务，本文档主要介绍如何配置镜像加速器","keywords":[],"kind":"page","lang":"en","lastmod":1532784935,"objectID":"276910536e156b0776fd2f5c8cb63773","permalink":"https://aeric.io/post/docker-image-accelerator-installation/","publishdate":"2018-07-28T21:35:35+08:00","readingtime":1,"relpermalink":"/post/docker-image-accelerator-installation/","section":"post","summary":"Docker 默认是从 Docker Hub 上拉取所需镜像的，但是一般在国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。为此 Docker 官方和国内很多云服务商都提供了国内","tags":["Docker"],"title":"Docker 配置镜像加速器","type":"post","url":"/post/docker-image-accelerator-installation/","weight":0,"wordcount":410},{"author":null,"categories":["TECH"],"content":"docker 的安装方式有好多种，除了直接用自带的 yum 源安装外，官方还提供了 docker 各个版本的 yum 源，本次安装选择在 CentOS 7 系统上安装免费版的的 ce 版本","date":1532698511,"description":"docker 的安装方式有好多种，除了直接用自带的 yum 源安装外，官方还提供了 docker 各个版本的 yum 源，本次安装选择在 CentOS 7 系统上安装免费版的的 ce 版本","dir":"post\\","excerpt_html":"docker 的安装方式有好多种，除了直接用自带的 yum 源安装外，官方还提供了 docker 各个版本的 yum 源，本次安装选择在 CentOS 7 系统上安装免费版的的 ce 版本","excerpt_text":"docker 的安装方式有好多种，除了直接用自带的 yum 源安装外，官方还提供了 docker 各个版本的 yum 源，本次安装选择在 CentOS 7 系统上安装免费版的的 ce 版本","expirydate":-62135596800,"fuzzywordcount":500,"html":"docker 的安装方式有好多种，除了直接用自带的 yum 源安装外，官方还提供了 docker 各个版本的 yum 源，本次安装选择在 CentOS 7 系统上安装免费版的的 ce 版本","keywords":[],"kind":"page","lang":"en","lastmod":1532698511,"objectID":"82705c42d7c81da0fd58b99b811c5017","permalink":"https://aeric.io/post/docker-installation-guide/","publishdate":"2018-07-27T21:35:11+08:00","readingtime":1,"relpermalink":"/post/docker-installation-guide/","section":"post","summary":"本次安装的 docker 客户端是 CE 版本，具体安装教程可以参考官方文档： Docker Installation 卸载旧版本 Docker 如果要重新安装 Docker ，首先需要在安装之前卸载之前安装过的 Docker 版本，具体卸","tags":["Docker"],"title":"CentOS 7 安装 Docker","type":"post","url":"/post/docker-installation-guide/","weight":0,"wordcount":456},{"author":null,"categories":["TECH"],"content":"Docker 最初是由 dotCloud 公司创始人 Solomon Hykes 发起的一个公司的内部项目，并于 2013 年实现开源，Docker 使用谷歌公司自己开发的 GO 语言实现。","date":1532612047,"description":"Docker 最初是由 dotCloud 公司创始人 Solomon Hykes 发起的一个公司的内部项目，并于 2013 年实现开源，Docker 使用谷歌公司自己开发的 GO 语言实现。","dir":"post\\","excerpt_html":"Docker 最初是由 dotCloud 公司创始人 Solomon Hykes 发起的一个公司的内部项目，并于 2013 年实现开源，Docker 使用谷歌公司自己开发的 GO 语言实现。","excerpt_text":"Docker 最初是由 dotCloud 公司创始人 Solomon Hykes 发起的一个公司的内部项目，并于 2013 年实现开源，Docker 使用谷歌公司自己开发的 GO 语言实现。","expirydate":-62135596800,"fuzzywordcount":1000,"html":"Docker 最初是由 dotCloud 公司创始人 Solomon Hykes 发起的一个公司的内部项目，并于 2013 年实现开源，Docker 使用谷歌公司自己开发的 GO 语言实现。","keywords":[],"kind":"page","lang":"en","lastmod":1532612047,"objectID":"e4c849aa29a8656f56c977ba28408461","permalink":"https://aeric.io/post/docker-introduction/","publishdate":"2018-07-26T21:34:07+08:00","readingtime":2,"relpermalink":"/post/docker-introduction/","section":"post","summary":"Docker 最初是由 dotCloud 公司创始人 Solomon Hykes 发起的一个公司的内部项目，并于 2013 年实现开源，主要项目代码在 GitHub 上维护。 Docker 使用谷歌公司自己开发的 GO 语言 实现的，基于 Linux 内","tags":["Docker"],"title":"容器 Docker 入门介绍","type":"post","url":"/post/docker-introduction/","weight":0,"wordcount":936},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":[],"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://aeric.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":[],"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"https://aeric.io/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":"我，一枚北漂青年，为了更好的未来一直在不断努力学习来丰富自己的人生阅历和专业技能。\n乐于分享，云原生狂热分子，长期活跃在 GitHub 上，本网站博文自己看的同时也可以分享给其他人，也算是和其他人分享自己的心得体会吧，在这个过程中可以学到很多，交到许多朋友，也可以不断地充实着自己。\n个人喜欢书法，喜欢音乐，爱打球，爱跑步，爱旅行。\n工作并不是生活的全部，我们也要学会享受生活。","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":6},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":[],"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"54ccacff97b96806d49760361ef17350","permalink":"https://aeric.io/top/books/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/books/","section":"top","summary":"Machine learning学习笔记 Coursera 在线课程 Machine learning 笔记 讲师: 吴恩达(Andrew Ng)  课程地址：https://www.coursera.org/learn/machine-learning","tags":null,"title":"","type":"top","url":"/top/books/","weight":0,"wordcount":11},{"author":null,"categories":null,"content":null,"date":1590840773,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"home","lang":"en","lastmod":1590840773,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"Aeric Blog","type":"page","url":"/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":-62135596800,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"/categories/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548594575,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548594575,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/consul/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/consul/","section":"tags","summary":"","tags":null,"title":"Consul","type":"tags","url":"/tags/consul/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548594575,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548594575,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/docker/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/docker/","section":"tags","summary":"","tags":null,"title":"Docker","type":"tags","url":"/tags/docker/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547102221,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547102221,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/docker-compose/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/docker-compose/","section":"tags","summary":"","tags":null,"title":"Docker-compose","type":"tags","url":"/tags/docker-compose/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1543740495,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1543740495,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/erlang/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/erlang/","section":"tags","summary":"","tags":null,"title":"Erlang","type":"tags","url":"/tags/erlang/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547779357,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547779357,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/harbor/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/harbor/","section":"tags","summary":"","tags":null,"title":"Harbor","type":"tags","url":"/tags/harbor/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547779357,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547779357,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/helm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/helm/","section":"tags","summary":"","tags":null,"title":"Helm","type":"tags","url":"/tags/helm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547469033,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547469033,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/https/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/https/","section":"tags","summary":"","tags":null,"title":"Https","type":"tags","url":"/tags/https/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1570270373,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1570270373,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/ingress/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ingress/","section":"tags","summary":"","tags":null,"title":"Ingress","type":"tags","url":"/tags/ingress/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590840773,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1590840773,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/kubernetes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kubernetes/","section":"tags","summary":"","tags":null,"title":"Kubernetes","type":"tags","url":"/tags/kubernetes/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547297053,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547297053,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/marathon/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/marathon/","section":"tags","summary":"","tags":null,"title":"Marathon","type":"tags","url":"/tags/marathon/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547297053,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547297053,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/mesos/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mesos/","section":"tags","summary":"","tags":null,"title":"Mesos","type":"tags","url":"/tags/mesos/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1546575816,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1546575816,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/metrics/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/metrics/","section":"tags","summary":"","tags":null,"title":"Metrics","type":"tags","url":"/tags/metrics/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547469033,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547469033,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/mkcert/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mkcert/","section":"tags","summary":"","tags":null,"title":"Mkcert","type":"tags","url":"/tags/mkcert/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590840773,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1590840773,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/npm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/npm/","section":"tags","summary":"","tags":null,"title":"Npm","type":"tags","url":"/tags/npm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1532847596,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1532847596,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/pass/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pass/","section":"tags","summary":"","tags":null,"title":"Pass","type":"tags","url":"/tags/pass/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590840773,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":1590840773,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/post/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/","section":"post","summary":"","tags":null,"title":"Posts","type":"post","url":"/post/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1575951988,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1575951988,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/prometheus/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/prometheus/","section":"tags","summary":"","tags":null,"title":"Prometheus","type":"tags","url":"/tags/prometheus/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1575951988,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1575951988,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/rabbitmq/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rabbitmq/","section":"tags","summary":"","tags":null,"title":"RabbitMQ","type":"tags","url":"/tags/rabbitmq/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1553654994,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1553654994,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/release/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/release/","section":"tags","summary":"","tags":null,"title":"Release","type":"tags","url":"/tags/release/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/search/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/","section":"search","summary":"","tags":null,"title":"Searches","type":"search","url":"/search/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590840773,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1590840773,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/categories/tech/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/tech/","section":"categories","summary":"","tags":null,"title":"TECH","type":"categories","url":"/categories/tech/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589587200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1589587200,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/categories/tools/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/tools/","section":"categories","summary":"","tags":null,"title":"TOOLS","type":"categories","url":"/categories/tools/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548594575,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1548594575,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"/tags/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/top/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/top/","section":"top","summary":"","tags":null,"title":"Tops","type":"top","url":"/top/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1570270373,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1570270373,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/traefik/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/traefik/","section":"tags","summary":"","tags":null,"title":"Traefik","type":"tags","url":"/tags/traefik/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590840773,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1590840773,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/verddacio/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/verddacio/","section":"tags","summary":"","tags":null,"title":"Verddacio","type":"tags","url":"/tags/verddacio/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1589587200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1589587200,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/yaml/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/yaml/","section":"tags","summary":"","tags":null,"title":"Yaml","type":"tags","url":"/tags/yaml/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1544085248,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1544085248,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://aeric.io/tags/zookeeper/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/zookeeper/","section":"tags","summary":"","tags":null,"title":"Zookeeper","type":"tags","url":"/tags/zookeeper/","weight":0,"wordcount":0}]